{"version":3,"sources":["../src/components/Resizable.tsx","../src/utils/isTouchEvent.ts","../src/utils/resizeLengthToRelative.ts","../src/utils/resizeLengthToStatic.ts","../src/utils/resizeLengthClamp.ts","../src/components/ResizeHandle.tsx","../src/components/useResizableStore.ts"],"sourcesContent":["import React from 'react';\n\nimport { useEditorRef, useElement, usePath } from '@udecode/plate/react';\n\nimport type { ResizeEvent, ResizeLength } from '../types';\nimport type { TResizableElement } from './TResizableElement';\n\nimport { resizeLengthClamp } from '../utils';\nimport { ResizeHandleProvider } from './ResizeHandle';\nimport { useResizableSet, useResizableValue } from './useResizableStore';\n\nexport interface ResizableOptions {\n  /** Node alignment. */\n  align?: 'center' | 'left' | 'right';\n\n  maxWidth?: ResizeLength;\n\n  minWidth?: ResizeLength;\n  readOnly?: boolean;\n}\n\nexport const useResizableState = ({\n  align = 'center',\n  maxWidth = '100%',\n  minWidth = 92,\n}: ResizableOptions = {}) => {\n  const editor = useEditorRef();\n  const element = useElement<TResizableElement>();\n  const path = usePath();\n\n  const nodeWidth = element?.width ?? '100%';\n\n  const width = useResizableValue('width');\n  const setWidth = useResizableSet('width');\n\n  const setNodeWidth = React.useCallback(\n    (w: number) => {\n      if (w === nodeWidth) {\n        // Focus the node if not resized\n        editor.tf.select(path);\n      } else {\n        editor.tf.setNodes<TResizableElement>({ width: w }, { at: path });\n      }\n    },\n    [editor, nodeWidth, path]\n  );\n\n  React.useEffect(() => {\n    setWidth(nodeWidth);\n  }, [nodeWidth, setWidth]);\n\n  return {\n    align,\n    maxWidth,\n    minWidth,\n    setNodeWidth,\n    setWidth,\n    width,\n  };\n};\n\nexport const useResizable = ({\n  align,\n  maxWidth,\n  minWidth,\n  setNodeWidth,\n  setWidth,\n  width,\n}: ReturnType<typeof useResizableState>) => {\n  const wrapperRef = React.useRef<HTMLDivElement>(null);\n\n  return {\n    context: {\n      onResize: React.useCallback(\n        ({ delta, direction, finished, initialSize }: ResizeEvent) => {\n          const wrapperStaticWidth = wrapperRef.current!.offsetWidth;\n          const deltaFactor =\n            (align === 'center' ? 2 : 1) * (direction === 'left' ? -1 : 1);\n\n          const newWidth = resizeLengthClamp(\n            initialSize + delta * deltaFactor,\n            wrapperStaticWidth,\n            {\n              max: maxWidth,\n              min: minWidth,\n            }\n          );\n\n          if (finished) {\n            setNodeWidth(newWidth);\n          } else {\n            setWidth(newWidth);\n          }\n        },\n        [align, maxWidth, minWidth, setNodeWidth, setWidth]\n      ),\n    },\n    props: {\n      style: {\n        maxWidth,\n        minWidth,\n        position: 'relative',\n        width,\n      } as React.CSSProperties,\n    },\n    wrapperProps: {\n      style: {\n        position: 'relative',\n      } as React.CSSProperties,\n    },\n    wrapperRef,\n  };\n};\n\nconst Resizable = React.forwardRef<\n  HTMLDivElement,\n  {\n    options: ResizableOptions;\n  } & React.HTMLAttributes<HTMLDivElement>\n>(({ children, options, ...rest }, ref) => {\n  const state = useResizableState(options);\n  const { context, props, wrapperProps, wrapperRef } = useResizable(state);\n\n  return (\n    <div ref={wrapperRef} {...wrapperProps}>\n      <div ref={ref} {...props} {...rest}>\n        <ResizeHandleProvider onResize={context.onResize}>\n          {children}\n        </ResizeHandleProvider>\n      </div>\n    </div>\n  );\n});\nResizable.displayName = 'Resizable';\n\nexport { Resizable };\n","export const isTouchEvent = (\n  event: MouseEvent | TouchEvent\n): event is TouchEvent => 'touches' in event;\n","import type { ResizeLength, ResizeLengthRelative } from '../types';\n\nexport const resizeLengthToRelative = (\n  length: ResizeLength,\n  parentLength: number\n): ResizeLengthRelative => {\n  if (typeof length === 'number') {\n    return `${(length / parentLength) * 100}%`;\n  }\n\n  return length;\n};\n","import type { ResizeLength, ResizeLengthStatic } from '../types';\n\nexport const resizeLengthToStatic = (\n  length: ResizeLength,\n  parentLength: number\n): ResizeLengthStatic => {\n  if (typeof length === 'string') {\n    return (parentLength * Number.parseFloat(length)) / 100;\n  }\n\n  return length;\n};\n","import type { ResizeLength, ResizeLengthStatic } from '../types';\n\nimport { resizeLengthToRelative } from './resizeLengthToRelative';\nimport { resizeLengthToStatic } from './resizeLengthToStatic';\n\nexport interface ResizeLengthClampOptions<T = ResizeLength> {\n  max?: T;\n  min?: T;\n}\n\nexport const resizeLengthClampStatic = (\n  length: ResizeLengthStatic,\n  { max, min }: ResizeLengthClampOptions<ResizeLengthStatic>\n): ResizeLengthStatic => {\n  if (min !== undefined) {\n    length = Math.max(length, min);\n  }\n  if (max !== undefined) {\n    length = Math.min(length, max);\n  }\n\n  return length;\n};\n\nexport const resizeLengthClamp = <T extends ResizeLength>(\n  length: T,\n  parentLength: number,\n  { max, min }: ResizeLengthClampOptions<ResizeLength>\n): T => {\n  const staticLength = resizeLengthToStatic(length, parentLength);\n\n  const clampedStaticLength = resizeLengthClampStatic(staticLength, {\n    max:\n      max === undefined ? undefined : resizeLengthToStatic(max, parentLength),\n    min:\n      min === undefined ? undefined : resizeLengthToStatic(min, parentLength),\n  });\n\n  switch (typeof length) {\n    case 'number': {\n      return clampedStaticLength as T;\n    }\n    case 'string': {\n      return resizeLengthToRelative(clampedStaticLength, parentLength) as T;\n    }\n\n    default: {\n      throw new Error('Invalid length type');\n    }\n  }\n};\n","import React from 'react';\n\nimport type { Nullable } from '@udecode/plate';\n\nimport {\n  createAtomStore,\n  createPrimitiveComponent,\n  useReadOnly,\n} from '@udecode/plate/react';\n\nimport type { ResizeDirection, ResizeEvent } from '../types';\n\nimport { isTouchEvent } from '../utils';\n\nexport type ResizeHandleStoreState = {\n  onResize: (event: ResizeEvent) => void;\n};\n\nconst initialState: Nullable<ResizeHandleStoreState> = {\n  onResize: null,\n};\n\nexport const {\n  ResizeHandleProvider,\n  useResizeHandleSet,\n  useResizeHandleStore,\n  useResizeHandleValue,\n} = createAtomStore(initialState as ResizeHandleStoreState, {\n  name: 'resizeHandle',\n  suppressWarnings: true,\n});\n\nexport type ResizeHandleOptions = {\n  direction?: ResizeDirection;\n  initialSize?: number;\n  onHover?: () => void;\n  onHoverEnd?: () => void;\n  onMouseDown?: React.MouseEventHandler;\n  onResize?: (event: ResizeEvent) => void;\n  onTouchStart?: React.TouchEventHandler;\n};\n\nexport const useResizeHandleState = ({\n  direction = 'left',\n  initialSize: _initialSize,\n  onHover,\n  onHoverEnd,\n  onMouseDown,\n  onResize: onResizeProp,\n  onTouchStart,\n}: ResizeHandleOptions) => {\n  const readOnly = useReadOnly();\n  const onResizeStore = useResizeHandleValue('onResize');\n  const onResize = onResizeProp ?? onResizeStore;\n\n  const [isResizing, setIsResizing] = React.useState(false);\n  const [initialPosition, setInitialPosition] = React.useState(0);\n  const [initialSizeState, setInitialSize] = React.useState(0);\n  const initialSize = _initialSize ?? initialSizeState;\n\n  const isHorizontal = direction === 'left' || direction === 'right';\n\n  React.useEffect(() => {\n    if (!isResizing) return;\n\n    const sendResizeEvent = (\n      event: MouseEvent | TouchEvent,\n      finished: boolean\n    ) => {\n      const { clientX, clientY } = isTouchEvent(event)\n        ? event.touches[0] || event.changedTouches[0]\n        : event;\n\n      const currentPosition = isHorizontal ? clientX : clientY;\n      const delta = currentPosition - initialPosition;\n      onResize({\n        delta,\n        direction,\n        finished,\n        initialSize,\n      });\n    };\n\n    const handleMouseMove = (event: MouseEvent | TouchEvent) =>\n      sendResizeEvent(event, false);\n\n    const handleMouseUp = (event: MouseEvent | TouchEvent) => {\n      setIsResizing(false);\n      onHoverEnd?.();\n      sendResizeEvent(event, true);\n    };\n\n    window.addEventListener('mousemove', handleMouseMove);\n    window.addEventListener('mouseup', handleMouseUp);\n    window.addEventListener('touchmove', handleMouseMove);\n    window.addEventListener('touchend', handleMouseUp);\n\n    return () => {\n      window.removeEventListener('mousemove', handleMouseMove);\n      window.removeEventListener('mouseup', handleMouseUp);\n      window.removeEventListener('touchmove', handleMouseMove);\n      window.removeEventListener('touchend', handleMouseUp);\n    };\n  }, [\n    isResizing,\n    initialPosition,\n    initialSize,\n    onResize,\n    isHorizontal,\n    onHoverEnd,\n    direction,\n  ]);\n\n  return {\n    direction,\n    initialPosition,\n    initialSize,\n    isHorizontal,\n    isResizing,\n    readOnly,\n    setInitialPosition,\n    setInitialSize,\n    setIsResizing,\n    onHover,\n    onHoverEnd,\n    onMouseDown,\n    onResize,\n    onTouchStart,\n  };\n};\n\nexport const useResizeHandle = ({\n  isHorizontal,\n  isResizing,\n  readOnly,\n  setInitialPosition,\n  setInitialSize,\n  setIsResizing,\n  onHover,\n  onHoverEnd,\n  onMouseDown,\n  onTouchStart,\n}: ReturnType<typeof useResizeHandleState>) => {\n  const handleMouseDown: React.MouseEventHandler = (event) => {\n    const { clientX, clientY } = event;\n    setInitialPosition(isHorizontal ? clientX : clientY);\n\n    const element = (event.target as HTMLElement).parentElement!;\n    setInitialSize(isHorizontal ? element.offsetWidth : element.offsetHeight);\n\n    setIsResizing(true);\n\n    onMouseDown?.(event);\n  };\n\n  const handleTouchStart: React.TouchEventHandler = (event) => {\n    const { touches } = event;\n    const touch = touches[0];\n    const { clientX, clientY } = touch;\n    setInitialPosition(isHorizontal ? clientX : clientY);\n\n    const element = (event.target as HTMLElement).parentElement!;\n    setInitialSize(isHorizontal ? element.offsetWidth : element.offsetHeight);\n    setIsResizing(true);\n    onTouchStart?.(event);\n  };\n\n  const handleMouseOver = () => {\n    onHover?.();\n  };\n\n  const handleMouseOut = () => {\n    if (!isResizing) {\n      onHoverEnd?.();\n    }\n  };\n\n  return {\n    hidden: readOnly,\n    props: {\n      onMouseDown: handleMouseDown,\n      onMouseOut: handleMouseOut,\n      onMouseOver: handleMouseOver,\n      onTouchEnd: handleMouseOut,\n      onTouchMove: handleMouseOver,\n      onTouchStart: handleTouchStart,\n    },\n  };\n};\n\nexport const ResizeHandle = createPrimitiveComponent<\n  'div',\n  Omit<React.HTMLAttributes<HTMLDivElement>, 'onResize'>\n>('div')({\n  propsHook: useResizeHandle,\n  stateHook: useResizeHandleState,\n});\n\nexport type ResizeHandleProps = React.ComponentPropsWithRef<\n  typeof ResizeHandle\n>;\n","import type React from 'react';\n\nimport { createAtomStore } from '@udecode/plate/react';\n\nexport const {\n  ResizableProvider,\n  resizableStore,\n  useResizableSet,\n  useResizableStore,\n  useResizableValue,\n} = createAtomStore(\n  {\n    width: 0 as React.CSSProperties['width'],\n  },\n  { name: 'resizable' }\n);\n"],"mappings":"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","names":["React","createAtomStore","React"]}